{
	"Flamework Controller": {
		"prefix": [
			"controller",
			"flameworkcontroller"
		],
		"description": "Create a Flamework controller",
		"body": [
			"import type { OnStart } from \"@flamework/core\";",
			"import { Controller } from \"@flamework/core\";",
			"import type { Logger } from \"@rbxts/log\";",
			"",
			"@Controller({})",
			"export default class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} implements OnStart {",
			"\tconstructor(private readonly logger: Logger) {}",
			"",
			"\t/** @ignore */",
			"\tpublic onStart(): void {",
			"\t\tthrow \"Method not implemented.\";",
			"\t}",
			"}",
			""
		]
	},
	"Flamework Service": {
		"prefix": [
			"service",
			"flameworkservice"
		],
		"description": "Create a Flamework service",
		"body": [
			"import type { OnStart } from \"@flamework/core\";",
			"import { Service } from \"@flamework/core\";",
			"import type { Logger } from \"@rbxts/log\";",
			"",
			"@Service({})",
			"export default class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} implements OnStart {",
			"\tconstructor(private readonly logger: Logger) {}",
			"",
			"\t/** @ignore */",
			"\tpublic onStart(): void {",
			"\t\tthrow \"Method not implemented.\";",
			"\t}",
			"}",
			""
		]
	},
	"Flamework Component": {
		"prefix": [
			"component",
			"flameworkcomponent"
		],
		"description": "Create a Flamework component",
		"body": [
			"import { BaseComponent, Component } from \"@flamework/components\";",
			"import type { OnStart } from \"@flamework/core\";",
			"import { Janitor } from \"@rbxts/janitor\";",
			"import type { Logger } from \"@rbxts/log\";",
			"",
			"import { $$NODE_ENV } from \"rbxts-transform-env\";",
			"import Tag from \"types/enum/tag\";",
			"import type { ${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/}Attributes, ${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/}Model } from \"types/interfaces/components/${TM_FILENAME_BASE/(.*)-component/$1/}\";",
			"",
			"@Component({",
			"\trefreshAttributes: $$NODE_ENV === \"development\",",
			"\ttag: Tag.${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/},",
			"})",
			"export default class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends BaseComponent<${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/}Attributes, ${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/}Model> implements OnStart {",
			"\tprivate readonly janitor = new Janitor();",
			"",
			"\tconstructor(private readonly logger: Logger) {",
			"\t\tsuper();",
			"\t}",
			"",
			"\t/** @ignore */",
			"\tpublic onStart(): void {",
			"\t\tthrow \"Method not implemented.\";",
			"\t}",
			"",
			"\t/** @ignore */",
			"\tpublic destroy(): void {",
			"\t\tthis.logger.Verbose(`${TM_FILENAME_BASE/(.*)-component.*/${1:/pascalcase}/} ${this.instance.GetFullName()} has been destroyed.`);",
			"\t\tthis.janitor.Destroy();",
			"\t\tsuper.destroy();",
			"\t}",
			"}",
		]
	},
	"Flamework Component Types": {
		"prefix": [
			"componenttypes",
			"flameworkcomponenttypes"
		],
		"description": "Create attribute and model interfaces for a Flamework component",
		"body": [
			"export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Attributes {}",
			"",
			"export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Model extends Model {}",
			""
		]
	}
}